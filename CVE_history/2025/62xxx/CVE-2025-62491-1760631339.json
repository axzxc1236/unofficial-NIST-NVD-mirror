{
  "cveId": "CVE-2025-62491",
  "eventName": "New CVE Received",
  "cveChangeId": "3309FDCA-7EEC-42A2-BD7B-D90E913E0B62",
  "sourceIdentifier": "cve-coordination@google.com",
  "created": "2025-10-16T16:15:39.470",
  "details": [
    {
      "action": "Added",
      "type": "Description",
      "newValue": "A Use-After-Free (UAF) vulnerability exists in the QuickJS engine's standard library when iterating over the global list of unhandled rejected promises (ts->rejected_promise_list).\n\n  *  The function js_std_promise_rejection_check attempts to iterate over the rejected_promise_list to report unhandled rejections using a standard list loop.\n\n\n  *  The reason for a promise rejection is processed inside the loop, including calling js_std_dump_error1(ctx, rp->reason).\n\n\n  *  If the promise rejection reason is an Error object that defines a custom property getter (e.g., via Object.defineProperty), this getter is executed during the error dumping process.\n\n\n  *  The malicious custom getter can execute JavaScript code that calls catch() on the same rejected promise being processed.\n\n\n  *  Calling catch() internally triggers js_std_promise_rejection_tracker, which then removes and frees the current promise entry (JSRejectedPromiseEntry) from the rejected_promise_list.\n\n\n  *  Since the list iteration continues using the now-freed memory pointer (el), the subsequent loop access results in a Use-After-Free condition."
    },
    {
      "action": "Added",
      "type": "CVSS V4.0",
      "newValue": "AV:A/AC:H/AT:P/PR:N/UI:P/VC:H/VI:H/VA:L/SC:H/SI:H/SA:L/E:X/CR:X/IR:X/AR:X/MAV:X/MAC:X/MAT:X/MPR:X/MUI:X/MVC:X/MVI:X/MVA:X/MSC:X/MSI:X/MSA:X/S:X/AU:X/R:X/V:X/RE:X/U:X"
    },
    {
      "action": "Added",
      "type": "CWE",
      "newValue": "CWE-416"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://bellard.org/quickjs/Changelog"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://issuetracker.google.com/434195203"
    }
  ]
}
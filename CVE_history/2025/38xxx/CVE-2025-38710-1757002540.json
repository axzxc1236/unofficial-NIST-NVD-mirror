{
  "cveId": "CVE-2025-38710",
  "eventName": "New CVE Received",
  "cveChangeId": "8CC2F741-F610-4F45-B9E2-7E05934D2A78",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "created": "2025-09-04T16:15:40.137",
  "details": [
    {
      "action": "Added",
      "type": "Description",
      "newValue": "In the Linux kernel, the following vulnerability has been resolved:\n\ngfs2: Validate i_depth for exhash directories\n\nA fuzzer test introduced corruption that ends up with a depth of 0 in\ndir_e_read(), causing an undefined shift by 32 at:\n\n  index = hash >> (32 - dip->i_depth);\n\nAs calculated in an open-coded way in dir_make_exhash(), the minimum\ndepth for an exhash directory is ilog2(sdp->sd_hash_ptrs) and 0 is\ninvalid as sdp->sd_hash_ptrs is fixed as sdp->bsize / 16 at mount time.\n\nSo we can avoid the undefined behaviour by checking for depth values\nlower than the minimum in gfs2_dinode_in(). Values greater than the\nmaximum are already being checked for there.\n\nAlso switch the calculation in dir_make_exhash() to use ilog2() to\nclarify how the depth is calculated.\n\nTested with the syzkaller repro.c and xfstests '-g quick'."
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/53a0249d68a210c16e961b83adfa82f94ee0a53d"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/557c024ca7250bb65ae60f16c02074106c2f197b"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/9680c58675b82348ab84d387e4fa727f7587e1a0"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/b5f46951e62377b6e406fadc18bc3c5bdf1632a7"
    }
  ]
}
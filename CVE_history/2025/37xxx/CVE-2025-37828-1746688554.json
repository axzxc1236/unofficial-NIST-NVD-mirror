{
  "cveId": "CVE-2025-37828",
  "eventName": "New CVE Received",
  "cveChangeId": "FC2D7EA8-2854-427B-88E9-116F7EB1D426",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "created": "2025-05-08T07:15:54.033",
  "details": [
    {
      "action": "Added",
      "type": "Description",
      "newValue": "In the Linux kernel, the following vulnerability has been resolved:\n\nscsi: ufs: mcq: Add NULL check in ufshcd_mcq_abort()\n\nA race can occur between the MCQ completion path and the abort handler:\nonce a request completes, __blk_mq_free_request() sets rq->mq_hctx to\nNULL, meaning the subsequent ufshcd_mcq_req_to_hwq() call in\nufshcd_mcq_abort() can return a NULL pointer. If this NULL pointer is\ndereferenced, the kernel will crash.\n\nAdd a NULL check for the returned hwq pointer. If hwq is NULL, log an\nerror and return FAILED, preventing a potential NULL-pointer\ndereference.  As suggested by Bart, the ufshcd_cmd_inflight() check is\nremoved.\n\nThis is similar to the fix in commit 74736103fb41 (\"scsi: ufs: core: Fix\nufshcd_abort_one racing issue\").\n\nThis is found by our static analysis tool KNighter."
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/47eec518aef3814f64a5da43df81bdd74d8c0041"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/4c324085062919d4e21c69e5e78456dcec0052fe"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/7d002f591486f5ef4bc02eb02025a53f931f0eb5"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/d6979fabe812a168d5053e5a41d5a2e9b8afd7bf"
    }
  ]
}
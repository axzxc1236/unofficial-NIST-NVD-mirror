{
  "cveId": "CVE-2025-39859",
  "eventName": "New CVE Received",
  "cveChangeId": "1D4D3C28-ED1F-4304-95A3-F4BF93C56486",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "created": "2025-09-19T16:15:44.867",
  "details": [
    {
      "action": "Added",
      "type": "Description",
      "newValue": "In the Linux kernel, the following vulnerability has been resolved:\n\nptp: ocp: fix use-after-free bugs causing by ptp_ocp_watchdog\n\nThe ptp_ocp_detach() only shuts down the watchdog timer if it is\npending. However, if the timer handler is already running, the\ntimer_delete_sync() is not called. This leads to race conditions\nwhere the devlink that contains the ptp_ocp is deallocated while\nthe timer handler is still accessing it, resulting in use-after-free\nbugs. The following details one of the race scenarios.\n\n(thread 1)                           | (thread 2)\nptp_ocp_remove()                     |\n  ptp_ocp_detach()                   | ptp_ocp_watchdog()\n    if (timer_pending(&bp->watchdog))|   bp = timer_container_of()\n      timer_delete_sync()            |\n                                     |\n  devlink_free(devlink) //free       |\n                                     |   bp-> //use\n\nResolve this by unconditionally calling timer_delete_sync() to ensure\nthe timer is reliably deactivated, preventing any access after free."
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/8bf935cf789872350b04c1a6468b0a509f67afb2"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/f10d3c7267ac7387a5129d5506c3c5f2460cfd9b"
    }
  ]
}
{
  "cveId": "CVE-2023-53095",
  "eventName": "New CVE Received",
  "cveChangeId": "9EDB8441-3A65-4EEB-8D3F-1570BF623592",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "created": "2025-05-02T16:15:28.453",
  "details": [
    {
      "action": "Added",
      "type": "Description",
      "newValue": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/ttm: Fix a NULL pointer dereference\n\nThe LRU mechanism may look up a resource in the process of being removed\nfrom an object. The locking rules here are a bit unclear but it looks\ncurrently like res->bo assignment is protected by the LRU lock, whereas\nbo->resource is protected by the object lock, while *clearing* of\nbo->resource is also protected by the LRU lock. This means that if\nwe check that bo->resource points to the LRU resource under the LRU\nlock we should be safe.\nSo perform that check before deciding to swap out a bo. That avoids\ndereferencing a NULL bo->resource in ttm_bo_swapout()."
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/9a9a8fe26751334b7739193a94eba741073b8a55"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/9ba1720f6c4a0f13c3f3cb5c28132ee75555d04f"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/9d9b1f9f7a72d83ebf173534e76b246349f32374"
    }
  ]
}
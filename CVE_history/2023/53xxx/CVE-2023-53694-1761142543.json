{
  "cveId": "CVE-2023-53694",
  "eventName": "New CVE Received",
  "cveChangeId": "00ACFFE7-62B4-4103-8D1E-16DCFA045E1F",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "created": "2025-10-22T14:15:43.887",
  "details": [
    {
      "action": "Added",
      "type": "Description",
      "newValue": "In the Linux kernel, the following vulnerability has been resolved:\n\nriscv: ftrace: Fixup panic by disabling preemption\n\nIn RISCV, we must use an AUIPC + JALR pair to encode an immediate,\nforming a jump that jumps to an address over 4K. This may cause errors\nif we want to enable kernel preemption and remove dependency from\npatching code with stop_machine(). For example, if a task was switched\nout on auipc. And, if we changed the ftrace function before it was\nswitched back, then it would jump to an address that has updated 11:0\nbits mixing with previous XLEN:12 part.\n\np: patched area performed by dynamic ftrace\nftrace_prologue:\np|      REG_S   ra, -SZREG(sp)\np|      auipc   ra, 0x? ------------> preempted\n\t\t\t\t\t...\n\t\t\t\tchange ftrace function\n\t\t\t\t\t...\np|      jalr    -?(ra) <------------- switched back\np|      REG_L   ra, -SZREG(sp)\nfunc:\n\txxx\n\tret"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/20a7510e781084364691b4962de31de758194cc9"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/84cfcf240f4a577733b1d98fcd2611a611612b03"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/8547649981e6631328cd64f583667501ae385531"
    }
  ]
}
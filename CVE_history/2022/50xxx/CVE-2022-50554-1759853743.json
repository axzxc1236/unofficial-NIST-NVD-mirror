{
  "cveId": "CVE-2022-50554",
  "eventName": "New CVE Received",
  "cveChangeId": "B874D1B5-669C-450A-9E59-DB1D5922A4D7",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "created": "2025-10-07T16:15:43.423",
  "details": [
    {
      "action": "Added",
      "type": "Description",
      "newValue": "In the Linux kernel, the following vulnerability has been resolved:\n\nblk-mq: avoid double ->queue_rq() because of early timeout\n\nDavid Jeffery found one double ->queue_rq() issue, so far it can\nbe triggered in VM use case because of long vmexit latency or preempt\nlatency of vCPU pthread or long page fault in vCPU pthread, then block\nIO req could be timed out before queuing the request to hardware but after\ncalling blk_mq_start_request() during ->queue_rq(), then timeout handler\nmay handle it by requeue, then double ->queue_rq() is caused, and kernel\npanic.\n\nSo far, it is driver's responsibility to cover the race between timeout\nand completion, so it seems supposed to be solved in driver in theory,\ngiven driver has enough knowledge.\n\nBut it is really one common problem, lots of driver could have similar\nissue, and could be hard to fix all affected drivers, even it isn't easy\nfor driver to handle the race. So David suggests this patch by draining\nin-progress ->queue_rq() for solving this issue."
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/7a73c54a3750895888ab586896736c9434e062a1"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/82c229476b8f6afd7e09bc4dc77d89dc19ff7688"
    },
    {
      "action": "Added",
      "type": "Reference",
      "newValue": "https://git.kernel.org/stable/c/8b3d6b029a552d2978bbac275303d11419826a69"
    }
  ]
}